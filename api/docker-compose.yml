services:

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 6979samZ.
      POSTGRES_DB: PortfolioDb
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - portfolio-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s  # how often to perform the check
      timeout: 10s   # how long to wait for a check to succeed
      retries: 3     # how many times to retry before considering the service unhealthy
      start_period: 30s # time to wait before starting health checks
  
  # api-gateway:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - "5000:80"
  #     - "5001:443"
  #   depends_on:
  #     - auth-service
  #     - badge-service
  #     - blog-service
  #     - social-service
  #     - work-service
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - ASPNETCORE_URLS=http://+:80;
  #   networks:
  #     - portfolio-network

  auth-service:
    build:
      context: .
      dockerfile: AuthService/Dockerfile
    ports:
      - "5002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=PortfolioDb;Username=postgres;Password=6979samZ.

    depends_on:
      - db
    networks:
      - portfolio-network

  badge-service:
    build:
      context: .
      dockerfile: BadgeService/Dockerfile
    ports:
      - "5003:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=PortfolioDb;Username=postgres;Password=6979samZ.

    depends_on:
      - db
    networks:
      - portfolio-network

  blog-service:
    build:
      context: .
      dockerfile: BlogService/Dockerfile
    ports:
      - "5004:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=PortfolioDb;Username=postgres;Password=6979samZ.

    depends_on:
      - db
    networks:
      - portfolio-network

  social-service:
    build:
      context: .
      dockerfile: SocialService/Dockerfile
    ports:
      - "5005:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=PortfolioDb;Username=postgres;Password=6979samZ.

    depends_on:
      - db
    networks:
      - portfolio-network

  work-service:
    build:
      context: .
      dockerfile: WorkService/Dockerfile
    ports:
      - "5006:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=PortfolioDb;Username=postgres;Password=6979samZ.

    depends_on:
      - db
    networks:
      - portfolio-network
  

networks:
  portfolio-network:
    driver: bridge

volumes:
  postgres-data:



  