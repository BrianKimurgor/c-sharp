name: Backend CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: portfolio_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore NuGet packages
        run: dotnet restore

      - name: Build all services
        run: dotnet build --configuration Release

      - name: Run Tests
        run: dotnet test --no-restore --verbosity normal

  docker-build:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker Images
        run: |
          services=("auth" "badge" "blog" "profile" "project" "social" "work")
          for service in "${services[@]}"; do
            docker build -t ${{ secrets.DOCKER_USERNAME }}/$service-service:latest ./${service^}Service
            docker push ${{ secrets.DOCKER_USERNAME }}/$service-service:latest
          done

      - name: Build docker-compose (optional)
        run: docker-compose -f docker-compose.yml config
